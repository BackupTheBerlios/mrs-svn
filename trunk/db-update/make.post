# Include file for the separate makefiles
# This makefile contains several default rules that are similar for all
# databanks

# First some rules to see if we need to throw away files in the repository

ifeq ($(PRESERVE_DAT_FILES),)
TO_BE_DELETED	= $(filter-out $(notdir $(DATFILES)), $(notdir $(wildcard $(DSTDIR)*)))
endif

ifneq ($(PRESERVE),)
	TO_BE_DELETED := $(filter-out $(PRESERVE), $(TO_BE_DELETED))
endif

ifneq ($(PRESERVE_DATE),)

$(DSTDIR)%: $(SRCDIR)%.gz
	gzcat $< > $@
	touch -cr $< $@

$(DSTDIR)%: $(SRCDIR)%.Z
	zcat $< > $@
	touch -cr $< $@

else

$(DSTDIR)%: $(SRCDIR)%.gz
	gzcat $< > $@

$(DSTDIR)%: $(SRCDIR)%.Z
	zcat $< > $@
endif

$(DSTDIR)%: $(SRCDIR)%
	ln -fs $< $@

dirs: $(PATHS)

ifeq ($(NO_AUTO_DATA_RULE),)
data: $(DATFILES)
ifneq ($(TO_BE_DELETED),)
	rm -f $(addprefix $(DSTDIR), $(TO_BE_DELETED))
	echo "Deleted $(TO_BE_DELETED)" | mail $(MAINTAINER)
endif
endif

$(SCRIPTDIR)ftpmirror.cf: $(SCRIPTDIR)ftpmirror.cf.template
	cat $< | sed "s:__RAWDIR__:$(DATADIR)raw:" > $@

blast: $(BLAST_FILES)

ifeq ($(DB_URL),)
fetch: dirs
else

ifneq ($(MIRROR_INCLUDE),)
MIRROR_OPTIONS	+= -i'$(MIRROR_INCLUDE)'
endif

fetch: dirs
	$(MIRROR) -d $(SRCDIR) $(MIRROR_OPTIONS) $(DB_URL)

endif

# MRS rules

ifneq ($(MRSLIBS),)

MRS_FILES	= $(addprefix $(MRSDIR), $(MRSLIBS))
MRS_OPTIONS	= 

ifneq ($(MRSSCRIPT),)
MRS_OPTIONS	+= -s $(MRSSCRIPT)
endif

ifneq ($(MRS_PARTS),)
ifeq ($(MRS_PARTS),2)
PARTS	= 1 2
endif
ifeq ($(MRS_PARTS),4)
PARTS	= 1 2 3 4
endif
ifeq ($(MRS_PARTS),8)
PARTS	= 1 2 3 4 5 6 7 8
endif
ifeq ($(PARTS),)
echo ""
echo "MRS_PARTS should be either 2, 4 or 8
echo ""
error
endif

# does anyone know how to collapse the following 8 lines into one?

${MRSLIBS:%=$(MRSDIR)%1.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%1.cmp=%} -p 1 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%2.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%2.cmp=%} -p 2 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%3.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%3.cmp=%} -p 3 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%4.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%4.cmp=%} -p 4 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%5.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%5.cmp=%} -p 5 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%6.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%6.cmp=%} -p 6 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%7.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%7.cmp=%} -p 7 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRSLIBS:%=$(MRSDIR)%8.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:%8.cmp=%} -p 8 -P $(MRS_PARTS) $(MRS_OPTIONS)

${MRS_FILES:=.cmp}: $(ZIPFILES)
	$(MAKE) -f $(DATABANK).make ${PARTS:%=${@:.cmp=}%.cmp}
	$(MRS_MERGE) -d $(@F:.cmp=) -P $(MRS_PARTS)
	chmod a+r $@
	rm -rf ${PARTS:%=$(MRSDIR)$(@F:.cmp=)%.cmp}

else

${MRS_FILES:=.cmp}: $(ZIPFILES)
	$(MRS_CREATE) -d ${@F:.cmp=} $(MRS_OPTIONS)
	chmod a+r $@

endif

# dictionary support

$(MRSDIR)%.dict: ${MRS_FILES:=.cmp}
	$(MRS_DICT_CREATE) -d ${@F:.dict=} -i $(MRS_DICT_FIELDS) $(MRS_DICT_OPTIONS)

ifeq ($(MRS_DICTS),)
MRS_DICTS = $(MRSLIBS)
endif

MRS_DICT_FILES		:= $(addsuffix .dict, $(addprefix $(MRSDIR), $(MRS_DICTS)))

# ranked search, weight files

$(MRSDIR)%.weights: ${MRS_FILES:=.cmp}
	$(MRS_WEIGHT_CREATE) -d ${@F:_*alltext*.weights=} -v -i '*alltext*'
	chmod a+r '$@'

ifeq ($(MRS_WEIGHTS),)
MRS_WEIGHTS = $(MRSLIBS)
endif

MRS_WEIGHT_FILES	:= $(addsuffix _*alltext*.weights, $(addprefix $(MRSDIR), $(MRS_WEIGHTS)))

mrs: ${MRS_FILES:=.cmp} $(MRS_WEIGHT_FILES) $(MRS_DICT_FILES)

else # MRSLIBS empty

mrs:

endif

FORCE:
